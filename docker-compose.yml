version: '3.8'

services:
  router_a:
    build:
      context: ./router
      dockerfile: router/Dockerfile
    container_name: router_a
    networks:
      net_ab:
        ipv4_address: 10.0.12.2
      net_ac:
        ipv4_address: 10.0.13.2
    cap_add: ["NET_ADMIN"]
    command: tail -f /dev/null

  router_b:
    build:
      context: ./router
      dockerfile: router/Dockerfile
    container_name: router_b
    networks:
      net_ab:
        ipv4_address: 10.0.12.3
      net_bd:
        ipv4_address: 10.0.24.2
    cap_add: ["NET_ADMIN"]
    command: tail -f /dev/null

  router_c:
    build:
      context: ./router
      dockerfile: router/Dockerfile
    container_name: router_c
    networks:
      net_ac:
        ipv4_address: 10.0.13.3
      net_ce:
        ipv4_address: 10.0.35.2
    cap_add: ["NET_ADMIN"]
    command: tail -f /dev/null

  router_d:
    build:
      context: ./router
      dockerfile: router/Dockerfile
    container_name: router_d
    networks:
      net_bd:
        ipv4_address: 10.0.24.3
      net_de:
        ipv4_address: 10.0.45.2
    cap_add: ["NET_ADMIN"]
    command: tail -f /dev/null

  router_e:
    build:
      context: ./router
      dockerfile: router/Dockerfile
    container_name: router_e
    networks:
      net_ce:
        ipv4_address: 10.0.35.3
      net_de:
        ipv4_address: 10.0.45.3
    cap_add: ["NET_ADMIN"]
    command: tail -f /dev/null

  host_a1:
    build:
      context: ./host
      dockerfile: host/Dockerfile
    container_name: host_a1
    networks:
      net_a:
        ipv4_address: 10.0.1.2
    cap_add: ["NET_ADMIN"]
    command: tail -f /dev/null
    depends_on:
      - router_a

  host_a2:
    build:
      context: ./host
      dockerfile: host/Dockerfile
    container_name: host_a2
    networks:
      net_a:
        ipv4_address: 10.0.1.3
    cap_add: ["NET_ADMIN"]
    command: tail -f /dev/null
    depends_on:
      - router_a

  host_b1:
    build:
      context: ./host
      dockerfile: host/Dockerfile
    container_name: host_b1
    networks:
      net_b:
        ipv4_address: 10.0.2.2
    cap_add: ["NET_ADMIN"]
    command: tail -f /dev/null
    depends_on:
      - router_b

  host_b2:
    build:
      context: ./host
      dockerfile: host/Dockerfile
    container_name: host_b2
    networks:
      net_b:
        ipv4_address: 10.0.2.3
    cap_add: ["NET_ADMIN"]
    command: tail -f /dev/null
    depends_on:
      - router_b

  host_c1:
    build:
      context: ./host
      dockerfile: host/Dockerfile
    container_name: host_c1
    networks:
      net_c:
        ipv4_address: 10.0.3.2
    cap_add: ["NET_ADMIN"]
    command: tail -f /dev/null
    depends_on:
      - router_c

  host_c2:
    build:
      context: ./host
      dockerfile: host/Dockerfile
    container_name: host_c2
    networks:
      net_c:
        ipv4_address: 10.0.3.3
    cap_add: ["NET_ADMIN"]
    command: tail -f /dev/null
    depends_on:
      - router_c

  host_d1:
    build:
      context: ./host
      dockerfile: host/Dockerfile
    container_name: host_d1
    networks:
      net_d:
        ipv4_address: 10.0.4.2
    cap_add: ["NET_ADMIN"]
    command: tail -f /dev/null
    depends_on:
      - router_d

  host_d2:
    build:
      context: ./host
      dockerfile: host/Dockerfile
    container_name: host_d2
    networks:
      net_d:
        ipv4_address: 10.0.4.3
    cap_add: ["NET_ADMIN"]
    command: tail -f /dev/null
    depends_on:
      - router_d

  host_e1:
    build:
      context: ./host
      dockerfile: host/Dockerfile
    container_name: host_e1
    networks:
      net_e:
        ipv4_address: 10.0.5.2
    cap_add: ["NET_ADMIN"]
    command: tail -f /dev/null
    depends_on:
      - router_e

  host_e2:
    build:
      context: ./host
      dockerfile: host/Dockerfile
    container_name: host_e2
    networks:
      net_e:
        ipv4_address: 10.0.5.3
    cap_add: ["NET_ADMIN"]
    command: tail -f /dev/null
    depends_on:
      - router_e

networks:
  net_a:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.1.0/24
  net_b:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.2.0/24
  net_c:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.3.0/24
  net_d:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.4.0/24
  net_e:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.5.0/24
  net_ab:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.12.0/24
  net_ac:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.13.0/24
  net_bd:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.24.0/24
  net_ce:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.35.0/24
  net_de:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.45.0/24